.\" Generated with Ronnjs/v0.1
.\" http://github.com/kapouer/ronnjs/
.
.TH "NODE\-DNS" "3" "October 2011" "" ""
.
.SH "NAME"
\fBnode-dns\fR \-\- http://nodejs\.org/docs/v0\.4\.8/api/dns\.html
.
.SH "DNS"
Use \fBrequire(\'dns\')\fR to access this module\.
.
.P
Here is an example which resolves \fB\'www\.google\.com\'\fR then reverse
resolves the IP addresses which are returned\.
.
.IP "" 4
.
.nf
var dns = require(\'dns\');
dns\.resolve4(\'www\.google\.com\', function (err, addresses) {
  if (err) throw err;
  console\.log(\'addresses: \' + JSON\.stringify(addresses));
  addresses\.forEach(function (a) {
    dns\.reverse(a, function (err, domains) {
      if (err) {
        console\.log(\'reverse for \' + a + \' failed: \' +
          err\.message);
      } else {
        console\.log(\'reverse for \' + a + \': \' +
          JSON\.stringify(domains));
      }
    });
  });
});
.
.fi
.
.IP "" 0
.
.SS "dns\.lookup(domain, family=null, callback)"
Resolves a domain (e\.g\. \fB\'google\.com\'\fR) into the first found A (IPv4) or
AAAA (IPv6) record\.
.
.P
The callback has arguments \fB(err, address, family)\fR\|\.  The \fBaddress\fR argument
is a string representation of a IP v4 or v6 address\. The \fBfamily\fR argument
is either the integer 4 or 6 and denotes the family of \fBaddress\fR (not
necessarily the value initially passed to \fBlookup\fR)\.
.
.SS "dns\.resolve(domain, rrtype=\'A\', callback)"
Resolves a domain (e\.g\. \fB\'google\.com\'\fR) into an array of the record types
specified by rrtype\. Valid rrtypes are \fBA\fR (IPV4 addresses), \fBAAAA\fR (IPV6
addresses), \fBMX\fR (mail exchange records), \fBTXT\fR (text records), \fBSRV\fR (SRV
records), \fBPTR\fR (used for reverse IP lookups), \fBNS\fR (name server records)
and \fBCNAME\fR (canonical name records)\.
.
.P
The callback has arguments \fB(err, addresses)\fR\|\.  The type of each item
in \fBaddresses\fR is determined by the record type, and described in the
documentation for the corresponding lookup methods below\.
.
.P
On error, \fBerr\fR would be an instanceof \fBError\fR object, where \fBerr\.errno\fR is
one of the error codes listed below and \fBerr\.message\fR is a string describing
the error in English\.
.
.SS "dns\.resolve4(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for IPv4 queries (\fBA\fR records)\. \fBaddresses\fR is an array of IPv4 addresses (e\.g\. \fB[\'74\.125\.79\.104\', \'74\.125\.79\.105\', \'74\.125\.79\.106\']\fR)\.
.
.SS "dns\.resolve6(domain, callback)"
The same as \fBdns\.resolve4()\fR except for IPv6 queries (an \fBAAAA\fR query)\.
.
.SS "dns\.resolveMx(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for mail exchange queries (\fBMX\fR records)\.
.
.P
\fBaddresses\fR is an array of MX records, each with a priority and an exchange
attribute (e\.g\. \fB[{\'priority\': 10, \'exchange\': \'mx\.example\.com\'},\.\.\.]\fR)\.
.
.SS "dns\.resolveTxt(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for text queries (\fBTXT\fR records)\. \fBaddresses\fR is an array of the text records available for \fBdomain\fR (e\.g\., \fB[\'v=spf1 ip4:0\.0\.0\.0 ~all\']\fR)\.
.
.SS "dns\.resolveSrv(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for service records (\fBSRV\fR records)\. \fBaddresses\fR is an array of the SRV records available for \fBdomain\fR\|\. Properties
of SRV records are priority, weight, port, and name (e\.g\., \fB[{\'priority\': 10, {\'weight\': 5, \'port\': 21223, \'name\': \'service\.example\.com\'}, \.\.\.]\fR)\.
.
.SS "dns\.reverse(ip, callback)"
Reverse resolves an ip address to an array of domain names\.
.
.P
The callback has arguments \fB(err, domains)\fR\|\.
.
.SS "dns\.resolveNs(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for name server records (\fBNS\fR records)\. \fBaddresses\fR is an array of the name server records available for \fBdomain\fR
(e\.g\., \fB[\'ns1\.example\.com\', \'ns2\.example\.com\']\fR)\.
.
.SS "dns\.resolveCname(domain, callback)"
The same as \fBdns\.resolve()\fR, but only for canonical name records (\fBCNAME\fR
records)\. \fBaddresses\fR is an array of the canonical name records available for \fBdomain\fR (e\.g\., \fB[\'bar\.example\.com\']\fR)\.
.
.P
If there an an error, \fBerr\fR will be non\-null and an instanceof the Error
object\.
.
.P
Each DNS query can return an error code\.
.
.IP "\(bu" 4
\fBdns\.TEMPFAIL\fR: timeout, SERVFAIL or similar\.
.
.IP "\(bu" 4
\fBdns\.PROTOCOL\fR: got garbled reply\.
.
.IP "\(bu" 4
\fBdns\.NXDOMAIN\fR: domain does not exists\.
.
.IP "\(bu" 4
\fBdns\.NODATA\fR: domain exists but no data of reqd type\.
.
.IP "\(bu" 4
\fBdns\.NOMEM\fR: out of memory while processing\.
.
.IP "\(bu" 4
\fBdns\.BADQUERY\fR: the query is malformed\.
.
.IP "" 0
