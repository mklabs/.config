.\" Generated with Ronnjs/v0.1
.\" http://github.com/kapouer/ronnjs/
.
.TH "NODE\-HTTPS" "3" "October 2011" "" ""
.
.SH "NAME"
\fBnode-https\fR \-\- http://nodejs\.org/docs/v0\.4\.8/api/https\.html
.
.SH "HTTPS"
HTTPS is the HTTP protocol over TLS/SSL\. In Node this is implemented as a
separate module\.
.
.SH "https\.Server"
This class is a subclass of \fBtls\.Server\fR and emits events same as \fBhttp\.Server\fR\|\. See \fBhttp\.Server\fR for more information\.
.
.SH "https\.createServer(options, [requestListener])"
Returns a new HTTPS web server object\. The \fBoptions\fR is similer to \fBtls\.createServer()\fR\|\. The \fBrequestListener\fR is a function which is
automatically added to the \fB\'request\'\fR event\.
.
.P
Example:
.
.IP "" 4
.
.nf
// curl \-k https://localhost:8000/
var https = require(\'https\');
var fs = require(\'fs\');
var options = {
  key: fs\.readFileSync(\'test/fixtures/keys/agent2\-key\.pem\'),
  cert: fs\.readFileSync(\'test/fixtures/keys/agent2\-cert\.pem\')
};
https\.createServer(options, function (req, res) {
  res\.writeHead(200);
  res\.end("hello world\\n");
})\.listen(8000);
.
.fi
.
.IP "" 0
.
.SH "https\.request(options, callback)"
Makes a request to a secure web server\.
Similar options to \fBhttp\.request()\fR\|\.
.
.P
Example:
.
.IP "" 4
.
.nf
var https = require(\'https\');
var options = {
  host: \'encrypted\.google\.com\',
  port: 443,
  path: \'/\',
  method: \'GET\'
};
var req = https\.request(options, function(res) {
  console\.log("statusCode: ", res\.statusCode);
  console\.log("headers: ", res\.headers);
  res\.on(\'data\', function(d) {
    process\.stdout\.write(d);
  });
});
req\.end();
req\.on(\'error\', function(e) {
  console\.error(e);
});
.
.fi
.
.IP "" 0
.
.P
The options argument has the following options
.
.IP "\(bu" 4
host: IP or domain of host to make request to\. Defaults to \fB\'localhost\'\fR\|\.
.
.IP "\(bu" 4
port: port of host to request to\. Defaults to 443\.
.
.IP "\(bu" 4
path: Path to request\. Default \fB\'/\'\fR\|\.
.
.IP "\(bu" 4
method: HTTP request method\. Default \fB\'GET\'\fR\|\.
.
.IP "\(bu" 4
key: Private key to use for SSL\. Default \fBnull\fR\|\.
.
.IP "\(bu" 4
cert: Public x509 certificate to use\. Default \fBnull\fR\|\.
.
.IP "\(bu" 4
ca: An authority certificate or array of authority certificates to check
the remote host against\.
.
.IP "" 0
.
.SH "https\.get(options, callback)"
Like \fBhttp\.get()\fR but for HTTPS\.
.
.P
Example:
.
.IP "" 4
.
.nf
var https = require(\'https\');
https\.get({ host: \'encrypted\.google\.com\', path: \'/\' }, function(res) {
  console\.log("statusCode: ", res\.statusCode);
  console\.log("headers: ", res\.headers);
  res\.on(\'data\', function(d) {
    process\.stdout\.write(d);
  });
})\.on(\'error\', function(e) {
  console\.error(e);
});
.
.fi
.
.IP "" 0
